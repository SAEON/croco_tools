function varargout = easy(varargin)
% 
%  EASY is a GUI for the Easy Grid package
%  execute by typing: easy
%
%  (c) 2008, Jeroen Molemaker
%
%
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @easy_OpeningFcn, ...
                   'gui_OutputFcn',  @easy_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

% --- Executes just before easy is made visible.
function easy_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to easy (see VARARGIN)

% Choose default command line output for easy
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% This sets up the initial plot - only do when we are invisible
% so window can get raised using easy.
if strcmp(get(hObject,'Visible'),'off')

 set(handles.edit1,'String',num2str(1000)); %% size_x (km)
 set(handles.edit2,'String',num2str(1000)); %% size_y
 set(handles.edit3,'String',num2str( 00));   %% Rotation
 set(handles.edit4,'String',num2str(  5));  %% Lon Center
 set(handles.edit5,'String',num2str( 52.5));  %% Lat Center
 set(handles.edit6,'String',num2str(100));  %% nx
 set(handles.edit7,'String',num2str(100));  %% ny

 size_x = str2double(get(handles.edit1,'String'))*1e3; %%
 size_y = str2double(get(handles.edit2,'String'))*1e3; %%
 rotate = str2double(get(handles.edit3,'String'));     %%
 tra_lon= str2double(get(handles.edit4,'String'));     %%
 tra_lat= str2double(get(handles.edit5,'String'));     %%
 nx     = str2num(get(handles.edit6,'String'));
 ny     = str2num(get(handles.edit7,'String'));
 [lon,lat,pn,pm,ang] = easy_grid(nx,ny,size_x,size_y,tra_lon,tra_lat,rotate);
%  load coast_global
   r_earth = 6371315.;
   dlon = max(size_x,size_y)/r_earth;
   m_proj('Gnomonic','lon',tra_lon,'lat',tra_lat,'rad',1.0*dlon*180/pi,'rec','on')
%  lo0 = min(min(lon))*180/pi - 4;
%  lo1 = max(max(lon))*180/pi + 4;
%  la0 = min(min(lat))*180/pi - 4;
%  la1 = max(max(lat))*180/pi + 4;
%  m_proj ('mercator','longitude',[lo0 lo1],'latitude',[la0 la1]);

   m_plot(lon(1,:)*180/pi,lat(1,:)*180/pi,'r')
   m_grid
   hold on
   m_coast('patch',[.7 .7 .7],'edgecolor','k');
   m_plot(lon(end,:)*180/pi,lat(end,:)*180/pi,'r')
   m_plot(lon(:,end)*180/pi,lat(:,end)*180/pi,'r')
   m_plot(lon(:,1)*180/pi,lat(:,1)*180/pi,'r')
   m_plot(lon(1,:)*180/pi,lat(1,:)*180/pi,'r')
   hold off
end

% UIWAIT makes easy wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = easy_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;

% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
axes(handles.axes1);
cla;

 load coast_global
 popup_sel_index = get(handles.popupmenu1, 'Value');
 size_x = str2double(get(handles.edit1,'String'))*1e3; %% Width 
 size_y = str2double(get(handles.edit2,'String'))*1e3; 
 rotate = str2double(get(handles.edit3,'String'));
 if abs(rotate) > 45
   rotate = rotate/abs(rotate)*45;
   set(handles.edit3,'String',num2str( rotate));   %% Rotation
 end
 
 tra_lon= str2double(get(handles.edit4,'String'));
 tra_lat= str2double(get(handles.edit5,'String'));
 nx     = str2num(get(handles.edit6,'String'));
 ny     = str2num(get(handles.edit7,'String')); 
 [lon,lat,pn,pm,ang] = easy_grid(nx,ny,size_x,size_y,tra_lon,tra_lat,rotate);
 r_earth = 6371315.;
 dlon = max(size_x,size_y)/r_earth;
  if dlon*180/pi > 50
%   disp('mercator')
    lo0 = min(min(lon))*180/pi - 4;
    lo1 = max(max(lon))*180/pi + 4;
    la0 = min(min(lat))*180/pi - 4;
    la1 = max(max(lat))*180/pi + 4;
%   m_proj ('mercator','longitude',[lo0 lo1],'latitude',[la0 la1]);
    m_proj ('miller cylindrical','longitude',[lo0 lo1],'latitude',[la0 la1]);
%   m_gshhs_i('save','coastline.mat');
  else
   m_proj('Gnomonic','lon',tra_lon,'lat',tra_lat,'rad',1.0*dlon*180/pi,'rec','on')
  end


switch popup_sel_index
    case 1
      m_plot(lon(1,:)*180/pi,lat(1,:)*180/pi,'r')
      m_grid
      hold on
      m_coast('patch',[.7 .7 .7],'edgecolor','k');
      m_plot(lon(end,:)*180/pi,lat(end,:)*180/pi,'r')
      m_plot(lon(:,end)*180/pi,lat(:,end)*180/pi,'r')
      m_plot(lon(:,1)*180/pi,lat(:,1)*180/pi,'r')
      m_plot(lon(1,:)*180/pi,lat(1,:)*180/pi,'r')
      hold off
    case 2
      m_coast('patch',[.7 .7 .7],'edgecolor','k');
      m_plot(lon*180/pi,lat*180/pi,'.g')
      m_grid
      hold on
      m_coast('patch',[.7 .7 .7],'edgecolor','k');
%     m_plot(clon,clat,'k')
      hold off
    case 3
%     nc1 = netcdf('/batavia/nmolem/OBSERV/TOPO/etopo5.nc'); 
      nc1 = netcdf('etopo5.nc'); 
      x = nc1{'topo_lon'}(:);
      y = nc1{'topo_lat'}(:);
      d = nc1{'topo'}(:);
      close(nc1);
      x(find(x<0)) = x(find(x<0)) +360;
      xm = x-360;
      x = [xm' x']';
      d = [d d];
      di = interp2(x,y,d,lon*180/pi,lat*180/pi);
      di(di>0) = 0.;

      m_pcolor(lon*180/pi,lat*180/pi,di);shading flat;colorbar
      m_grid
      m_coast('patch',[.7 .7 .7],'edgecolor','k');
    case 4
      m_pcolor(lon*180/pi,lat*180/pi,pn);shading flat;colorbar
      m_grid
      m_coast('patch',[.7 .7 .7],'edgecolor','k');
    case 5
      m_pcolor(lon*180/pi,lat*180/pi,pm);shading flat;colorbar
      m_grid
      m_coast('patch',[.7 .7 .7],'edgecolor','k');
    case 6
      m_pcolor(lon*180/pi,lat*180/pi,ang);shading flat;colorbar
      m_grid
      m_coast('patch',[.7 .7 .7],'edgecolor','k');
end


% --------------------------------------------------------------------
function FileMenu_Callback(hObject, eventdata, handles)
% hObject    handle to FileMenu (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OpenMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to OpenMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
file = uigetfile('*.fig');
if ~isequal(file, 0)
    open(file);
end

% --------------------------------------------------------------------
function PrintMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to PrintMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
printdlg(handles.figure1)

% --------------------------------------------------------------------
function CloseMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to CloseMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
selection = questdlg(['Close ' get(handles.figure1,'Name') '?'],...
                     ['Close ' get(handles.figure1,'Name') '...'],...
                     'Yes','No','Yes');
if strcmp(selection,'No')
    return;
end

delete(handles.figure1)


% --- Executes on selection change in popupmenu1.
function popupmenu1_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = get(hObject,'String') returns popupmenu1 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu1


% --- Executes during object creation, after setting all properties.
function popupmenu1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: popupmenu controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc
    set(hObject,'BackgroundColor','white');
else
    set(hObject,'BackgroundColor',get(0,'defaultUicontrolBackgroundColor'));
end

set(hObject, 'String', {'outline', 'grid', 'topo', 'pn', 'pm', 'angle'});



function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit2_Callback(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit2 as text
%        str2double(get(hObject,'String')) returns contents of edit2 as a double


% --- Executes during object creation, after setting all properties.
function edit2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit3_Callback(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit3 as text
%        str2double(get(hObject,'String')) returns contents of edit3 as a double


% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit4_Callback(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit4 as text
%        str2double(get(hObject,'String')) returns contents of edit4 as a double


% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit5_Callback(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit5 as text
%        str2double(get(hObject,'String')) returns contents of edit5 as a double


% --- Executes during object creation, after setting all properties.
function edit5_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton4.
function pushbutton4_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

   size_x = str2double(get(handles.edit1,'String'))*1e3; %% Width 
   size_y = str2double(get(handles.edit2,'String'))*1e3; 
   rotate = str2double(get(handles.edit3,'String'));
   if abs(rotate) > 45
     rotate = rotate/abs(rotate)*45;
     set(handles.edit3,'String',num2str( rotate));   %% Rotation
   end
   tra_lon= str2double(get(handles.edit4,'String'));
   tra_lat= str2double(get(handles.edit5,'String'));
   nx     = str2num(get(handles.edit6,'String'));
   ny     = str2num(get(handles.edit7,'String')); 
   [lon,lat,pn,pm,ang] = easy_grid(nx,ny,size_x,size_y,tra_lon,tra_lat,rotate);
   %% Getting topo
%  nc1 = netcdf('/batavia/nmolem/OBSERV/TOPO/etopo5.nc'); 
   nc1 = netcdf('etopo5.nc'); 
   x = nc1{'topo_lon'}(:);
   y = nc1{'topo_lat'}(:);
   d = nc1{'topo'}(:);
   close(nc1);
   x(find(x<0)) = x(find(x<0)) +360;
   xm = x-360;
   x = [xm' x']';
   d = [d d];
   di = interp2(x,y,d,lon*180/pi,lat*180/pi);
   %% Make the grid file
   make_grid(nx,ny,lon,lat,pn,pm,di,ang,size_x,size_y,rotate,tra_lon,tra_lat);


function edit6_Callback(hObject, eventdata, handles)
% hObject    handle to edit6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit6 as text
%        str2double(get(hObject,'String')) returns contents of edit6 as a double


% --- Executes during object creation, after setting all properties.
function edit6_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit7_Callback(hObject, eventdata, handles)
% hObject    handle to edit7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit7 as text
%        str2double(get(hObject,'String')) returns contents of edit7 as a double


% --- Executes during object creation, after setting all properties.
function edit7_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


