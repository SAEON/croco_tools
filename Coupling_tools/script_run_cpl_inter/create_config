#!/bin/bash -x
#
# --------------------------------------------------
#
# Script to Create config. architecture 
#
# --------------------------------------------------
# Configuration architecture
# --------------------------------------------------
# $HOME/CONFIGS/MYCONFIG
#                       - wrf_in
#                       - ww3_in
#                       - croco_in
#                       - oasis_in
#                       - toy_in
# $WORKDIR/CONFIGS/MYCONFIG
#                       - wrf_files
#                       - ww3_files
#                       - croco_files
#                       - oasis_files
#                       - toy_files
# --------------------------------------------------
#
# Further Information:   
# http://www.croco-ocean.org
#  
# This file is part of CROCOTOOLS
#
# CROCOTOOLS is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation; either version 2 of the License,
# or (at your option) any later version.
#
# CROCOTOOLS is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA  02111-1307  USA
#
# Copyright (c) 2018 S. Jullien
# swen.jullien@ifremer.fr
# --------------------------------------------------

#=========================================================================
#=======================  USER CHANGES  ==================================
#=========================================================================

# Machine you are working on
# --------------------------

export MACHINE="DATARMOR"

# Home and Work configuration directories
# ---------------------------------------
export CONFIG=BENGUELA
export hconf=${DATAWORK}/${CONFIG} 
export wconf=$SCRATCH/${CONFIG}

# CROCO parent directory 
# (where croco_tools directory and croco source directory can be found)
# -----------------
export croco=/home2/datawork/mlecorre/COUPLING/croco

# Options for you configuration
# -----------------------------

models=("cpl" "oce" "atm" "wav") #av: "cpl" "oce" "atm" "wav" "xios"


interannual_run=1
#=========================================================================
#=====================  END USER CHANGES  ================================
#=========================================================================

if [[ ${models[@]} =~ "oce" ]] ; then 
 echo 'Copy CROCO useful scripts and input files'
 echo '-----------------------------------------'
 mkdir -p $hconf/croco_in
 mkdir -p $wconf/croco_files
 cp -r ${croco}/croco_tools/Coupling_tools/croco_in/* $hconf/croco_in/.
 cp -f $croco/croco/OCEAN/param.h $hconf/croco_in/.
 cp -f $croco/croco/OCEAN/jobcomp $hconf/croco_in/.

fi

if [[ ${models[@]} =~ "wav" ]] ; then
 echo 'Copy WW3 useful scripts and input files'
 echo '-----------------------------------------'
 mkdir -p $hconf/ww3_in
 mkdir -p $wconf/ww3_files
 cp -r ${croco}/croco_tools/Coupling_tools/ww3_in/* $hconf/ww3_in/.
fi

if [[ ${models[@]} =~ "atm" ]] ; then
 echo 'Copy WRF useful scripts and input files'
 echo '-----------------------------------------'
 mkdir -p $hconf/wrf_in
 mkdir -p $wconf/wrf_files
 cp -r ${croco}/croco_tools/Coupling_tools/wrf_in/* $hconf/wrf_in/.
fi
if [[ ${models[@]} =~ "cpl" ]] ; then
 echo 'Copy OASIS useful scripts and input files'
 echo '-----------------------------------------'
 mkdir -p $hconf/oasis_in
 cp -r ${croco}/croco_tools/Coupling_tools/oasis_in/* $hconf/oasis_in/.
fi
if [[ ${models[@]} =~ "toy" ]] ; then
 echo 'Copy TOY sources, useful scripts and input files'
 echo '------------------------------------------------'
 mkdir -p $hconf/toy_in
 mkdir -p $wconf/toy_files
 cp -r ${croco}/croco_tools/Coupling_tools/toy_in/* $hconf/toy_in/.
fi
if [[ ${models[@]} =~ "xios" ]] ; then
 echo 'Create XIOS file'
 echo '------------------------------------------------'
 mkdir -p $hconf/xios_in
fi



echo 'Copy run scripts'
echo '----------------'
if [ $interannual_run == 1 ]; then
    [ -d $hconf/my_script_cpl ] && \rm -Rf $hconf/my_script_cpl 
    cp -Rf ${PWD}/../script_run_cpl_inter $hconf/my_script_cpl
    mv $hconf/my_script_cpl/create_config $hconf/my_script_cpl/create_config.bck
#    cp -r ${croco}/croco_tools/Coupling_tools/script_run_cpl_inter $hconf/.
##### Create path file #####
    cd $hconf/my_script_cpl/routines/paths
    cat ./path_base.sh >> tmppath

    # add model path part
    for k in `seq 0 $(( ${#models[@]} - 1))` ; do
        [ ${models[$k]} == "cpl" ] && printf "export CPL=\"\"\n" >> tmppath 
        [ ${models[$k]} == "oce" ] && printf "export OCE=\"${croco}/croco/OCEAN\"\n" >> tmppath
        [ ${models[$k]} == "atm" ] && printf "export ATM=\"\"\n" >> tmppath
        [ ${models[$k]} == "wav" ] && printf "export WAV=\"\"\n" >> tmppath
        [ ${models[$k]} == "toy" ] && printf "export TOY=\"\"\n" >> tmppath
        [ ${models[$k]} == "xios" ] && printf "export XIOS=\"\"\n" >> tmppath
    done

    #add path to files

    for k in ${models[@]} ; do
        cat ./path_${k}.sh >> tmppath
    done

    sed -e "s|export MACHINE=.*|export MACHINE=\"${MACHINE}\"|g" \
        -e "s|export CONFIG=.*|export CONFIG=${CONFIG}|g" \
        -e "s|export CHOME=.*|export CHOME=${hconf}|g" \
        -e "s|export CWORK=.*|export CWORK=${wconf}|g" \
        tmppath > tmppath1

    mv tmppath1 tmppath
    mv tmppath ${hconf}/
    cd ${hconf}
    cat my_script_cpl/routines/myenv.${MACHINE} tmppath > myenv_mypath.sh
    chmod 755 myenv_mypath.sh
    \rm tmppath
##### Create namelist file #####
    cd my_script_cpl/routines/namelists
    head -n 35 ./namelist_base.sh > mynamelist.sh

    for k in `seq 0 $(( ${#models[@]} - 1))` ; do
        [ ${models[$k]} == "oce" ] && printf "export OCE_EXE_DIR=\n" >> mynamelist.sh
        [ ${models[$k]} == "atm" ] && printf "export ATM_EXE_DIR=\n" >> mynamelist.sh
        [ ${models[$k]} == "wav" ] && printf "export WAV_EXE_DIR=\n" >> mynamelist.sh
        [ ${models[$k]} == "toy" ] && printf "export TOY_EXE_DIR=\n" >> mynamelist.sh
        [ ${models[$k]} == "xios" ] && printf "export XIOS_EXE_DIR=\n" >> mynamelist.sh
    done

    sed -n "42,44p" ./namelist_base.sh >> mynamelist.sh

    for k in ${models[@]} ; do
        cat ./namelist_${k}.sh >> mynamelist.sh
    done

    tail -n 59 ./namelist_base.sh >> mynamelist.sh

    sed -e "s|export CEXPER=.*|export CEXPER=${CONFIG}|g" \
        mynamelist.sh > mynamelist1.sh

    mv mynamelist1.sh mynamelist.sh
    chmod 755 mynamelist.sh
    mv mynamelist.sh ../../.
######
else
    cp ${croco}/croco_tools/Coupling_tools/* $hconf/.
fi

